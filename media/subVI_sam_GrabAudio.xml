<!-- title = sam_GrabAudio.vi -->
<!-- summary = 
Build a LabVIEW subVI to wait for audio to exceed a user-defined threshold, and then record audio for a specified time interval.
-->

<!-- prerequisite module = sam_ListenForAudio.vi
-->

<?xml version='1.0' standalone='yes' ?>
<LVData>
<Version>8.2</Version>

<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW SubVI: sam_GrabAudio.vi</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val> {emphasis}Description:{/emphasis} 
			Wait for audio to exceed a user-defined threshold, and then record audio for a specified time interval.
			This subVI depends on {cnxn document=&quot;m????&quot;}sam_ListenForAudio.vi{/cnxn}.
	</Val> </String>
	<String> <Name>String</Name> <Val> {emphasis}Category:{/emphasis} 
		Speaker-air-microphone (SAM) channel ("sam" prefix)
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Inputs (Controls)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>4</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}duration [s] (1){/code} -- DBL</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}threshold level (0.1){/code} -- DBL</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}fs [Hz] (22050){/code} -- DBL</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}error in (no error){/code} -- error cluster</Val> </String>
</Array>
</Cluster>

<String> <Name>para</Name> <Val>
Parentheses ( ) indicate default value; square brackets [ ] designate units.
</Val> </String>



<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Outputs (Indicators)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}waveform out{/code} -- waveform</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}error out{/code} -- error cluster</Val> </String>
</Array>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Required Behavior</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>3</Dimsize>
	<String> <Name>String</Name> <Val>
			Use {cnxn document=&quot;m????&quot;}sam_ListenForAudio.vi{/cnxn} to continually acquire audio samples 
			in 1024-sample blocks. Once "sam_ListenForAudio" completes execution (i.e., then the audio level exceeds
			{code type=&quot;inline&quot;}threshold level{/code}), record audio for 
			{code type=&quot;inline&quot;}duration{/code} seconds at the sampling frequency {code type=&quot;inline&quot;}fs{/code}.
	</Val> </String>
	<String> <Name>String</Name> <Val>
			The audio output of {cnxn document=&quot;m????&quot;}sam_ListenForAudio.vi{/cnxn} serves as the beginning of
			the audio signal {code type=&quot;inline&quot;}waveform out{/code}.
	</Val> </String>
	<String> <Name>String</Name> <Val>
			The sound-card must be cleaned up using "Graphics and Sound | Sound | Input | Sound Input Clear" once the audio has
			been recorded.
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW Coding Tips</Val> </String>

<String> <Name>para</Name> <Val>
		View the screencast video in {cnxn document=&quot;m14767&quot;}Create a SubVI in LabVIEW{/cnxn} to learn the mechanics of subVIs.
</Val> </String>

<String> <Name>para</Name> <Val>
		Refer to the {cnxn target=&quot;video&quot;/} screencast video for LabVIEW coding tips and techniques specific to this subVI.
</Val> </String>

<Cluster> <Name>video</Name> <NumElts>4</NumElts>
<String> <Name>ID (optional)</Name> <Val>video</Val> </String>
<String> <Name>video name</Name> <Val>vi</Val> </String>
<String> <Name>webpage title</Name> <Val>sam_GrabAudio.vi</Val> </String>
<String> <Name>caption</Name> <Val>LabVIEW coding tips and techniques for sam_GrabAudio.vi</Val> </String>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->

</LVData>

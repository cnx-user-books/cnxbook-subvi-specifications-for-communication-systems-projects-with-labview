<!-- title = util_BinarySymmetricChannel.vi -->
<!-- summary = 
Build a LabVIEW subVI to implement a binary symmetric channel (BSC).
-->

<?xml version='1.0' standalone='yes' ?>
<LVData>
<Version>8.2</Version>

<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW SubVI: util_BinarySymmetricChannel.vi</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val> {emphasis}Description:{/emphasis} 
		A {term}binary symmetric channel{/term} (BSC) simulates a digital communication channel with a simple probabilistic model.
		The simple model makes two assumptions: (1) bit errors occur independently for each bit transmitted through the channel,
		and (2) a bit error transforming a 0 to a 1 is equally likely as an error transforming a 1 to a 0, i.e., the channel is symmetric.
		Create a subVI that accepts an input bitstream to produce an output bitstream in which errors are inserted according to a
		specified bit error rate (or probability of error).
	</Val> </String>
	<String> <Name>String</Name> <Val> {emphasis}Category:{/emphasis} 
		General-purpose utility ("util" prefix)
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Inputs (Controls)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}bitstream in{/code} -- 1-D Boolean array</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}bit error rate{/code} -- DBL</Val> </String>
</Array>
</Cluster>

<String> <Name>para</Name> <Val>
Parentheses ( ) indicate default value; square brackets [ ] designate units.
</Val> </String>



<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Outputs (Indicators)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>1</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}bitstream out{/code} -- 1-D Boolean array</Val> </String>
</Array>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Required Behavior</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>3</Dimsize>
	<String> <Name>String</Name> <Val>
		Introduce bit errors into the bitstream according to the specified bit error rate.
	</Val> </String>
	<String> <Name>String</Name> <Val>
		Bit errors from one bit to the next are independent of one another.
	</Val> </String>
	<String> <Name>String</Name> <Val>
		Transforming a "True" to a "False" is equally likely to transforming a "False" to a "True."
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW Coding Tips</Val> </String>

<String> <Name>para</Name> <Val>
		View the screencast video in {cnxn document=&quot;m14767&quot;}Create a SubVI in LabVIEW{/cnxn} to learn the mechanics of subVIs.
</Val> </String>

<String> <Name>para</Name> <Val>
		Refer to the {cnxn target=&quot;video&quot;/} screencast video for LabVIEW coding tips and techniques specific to this subVI.
		Two distinct approaches are demonstrated, one based on the "Random Number (0-1)" built-in LabVIEW node and another based on 
		the "Bernoulli Noise" built-in subVI.
</Val> </String>

<Cluster> <Name>video</Name> <NumElts>4</NumElts>
<String> <Name>ID (optional)</Name> <Val>video</Val> </String>
<String> <Name>video name</Name> <Val>vi</Val> </String>
<String> <Name>webpage title</Name> <Val>util_BinarySymmetricChannel.vi</Val> </String>
<String> <Name>caption</Name> <Val>LabVIEW coding tips and techniques for util_BinarySymmetricChannel.vi</Val> </String>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->

</LVData>

<!-- title = regen_Sampler.vi -->
<!-- summary = 
Build a LabVIEW subVI to sample a signal at selected instants in time.
-->

<?xml version='1.0' standalone='yes' ?>
<LVData>
<Version>8.2</Version>

<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW SubVI: regen_Sampler.vi</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val> {emphasis}Description:{/emphasis} 
			Sample a signal at selected instants in time. The signal input is
			a discrete-time sampled signal that represents an "analog" signaling waveform.
			The sampling instants are indicated by a Boolean array of the same length
			as the signal input. A user-defined delay can be applied to shift the
			sampling instants by a fixed amount.
	</Val> </String>
	<String> <Name>String</Name> <Val> {emphasis}Category:{/emphasis} 
			Bitstream regeneration ("regen" prefix)
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Inputs (Controls)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>3</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}signal in{/code} -- waveform</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}sampling instants{/code} -- 1-D Boolean array</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}delay [samples] (0){/code} -- I32</Val> </String>
</Array>
</Cluster>

<String> <Name>para</Name> <Val>
Parentheses ( ) indicate default value; square brackets [ ] designate units.
</Val> </String>



<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Outputs (Indicators)</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>1</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>2</Dimsize>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}sampling signal out{/code} -- 1-D array of DBL</Val> </String>
	<String> <Name>String</Name> <Val>{code type=&quot;inline&quot;}actual sampling instants{/code} -- 1-D Boolean array</Val> </String>
</Array>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>Required Behavior</Val> </String>

<Cluster> <Name>list</Name> <NumElts>3</NumElts>
<EW> <Name>type</Name> <Choice>Bulleted</Choice> <Choice>Enumerated</Choice> <Val>0</Val> </EW>
<String> <Name>list name (optional)</Name> <Val></Val> </String>
<Array> <Name>list items</Name> <Dimsize>3</Dimsize>
	<String> <Name>String</Name> <Val>
			{code type=&quot;inline&quot;}sampled signal out{/code} contains the subset of values from {code type=&quot;inline&quot;}signal in{/code} 
			that match the index values of the {code type=&quot;inline&quot;}T{/code}-valued elements of
			{code type=&quot;inline&quot;}sampling instants{/code}. {code type=&quot;inline&quot;}sampling instants{/code} is assumed to be of the
			same length as {code type=&quot;inline&quot;}signal in{/code}. Expressed another way, the Boolean array 
			{code type=&quot;inline&quot;}sampling instants{/code} contains {code type=&quot;inline&quot;}T{/code} (true) values at each time that
			{code type=&quot;inline&quot;}signal in{/code} is to be sampled. The output {code type=&quot;inline&quot;}sampled signal out{/code} 
			therefore contains the resulting samples.
	</Val> </String>
	<String> <Name>String</Name> <Val>
			The {code type=&quot;inline&quot;}delay{/code} value adds a constant shift to the position of the sampling instants. The delay
			amount defaults to zero; a positive value delays the sampling instants and a negative value advances the sampling instants.
	</Val> </String>
	<String> <Name>String</Name> <Val>
			The {code type=&quot;inline&quot;}actual sampling instants{/code} is a copy of the input {code type=&quot;inline&quot;}sampling instants{/code} 
			with the delay value applied.
	</Val> </String>
</Array>
</Cluster>


<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->
<String> <Name>sec</Name> <Val>LabVIEW Coding Tips</Val> </String>

<String> <Name>para</Name> <Val>
		View the screencast video in {cnxn document=&quot;m14767&quot;}Create a SubVI in LabVIEW{/cnxn} to learn the mechanics of subVIs.
</Val> </String>

<String> <Name>para</Name> <Val>
		Refer to the {cnxn target=&quot;video&quot;/} screencast video for LabVIEW coding tips and techniques specific to this subVI.
</Val> </String>

<Cluster> <Name>video</Name> <NumElts>4</NumElts>
<String> <Name>ID (optional)</Name> <Val>video</Val> </String>
<String> <Name>video name</Name> <Val>vi</Val> </String>
<String> <Name>webpage title</Name> <Val>regen_Sampler.vi</Val> </String>
<String> <Name>caption</Name> <Val>LabVIEW coding tips and techniques for regen_Sampler.vi</Val> </String>
</Cluster>

<String> <Name>secend</Name> <Val></Val> </String>
<!-------------------------------------------------------->

</LVData>
